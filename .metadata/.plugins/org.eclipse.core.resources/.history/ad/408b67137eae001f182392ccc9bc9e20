import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;


import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.Duration;
import java.util.Random;

public class Complete_Registartion_login_Form {
    public static void main(String[] args) {
        String projectPath = System.getProperty("user.dir");
        System.out.println("Project Path: " + projectPath);

        System.setProperty("webdriver.gecko.driver", projectPath + "//drivers/geckodriver/geckodriver");
        WebDriver driver = new ChromeDriver();

        try {
            // Registration Process
            completeRegistration(driver);

            // Login Process
            login(driver);

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            driver.quit(); // Close the driver at the end of the execution
        }
    }

    // Method for the registration process
    private static void completeRegistration(WebDriver driver) {
        try {
            // Generate unique email and password
            String email = generateUniqueEmail();
            String password = generateUniquePassword();

            // Save credentials to a file
            saveCredentialsToFile(email, password);

            // Navigate to the registration page
            driver.get("https://qas.sunhub.com/register");

            // Wait for the form to load
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(20));

            // Select the 'Buyer' radio button
            WebElement buyerRadio = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[@id=\"role\"]/label[1]")));
            buyerRadio.click();

            // Fill in the registration form
            driver.findElement(By.id("firstname")).sendKeys("Automation Ghost HEHE");
            driver.findElement(By.id("email")).sendKeys(email);
            driver.findElement(By.id("password")).sendKeys(password);
            driver.findElement(By.id("password_confirmation")).sendKeys(password);
            driver.findElement(By.id("phone")).sendKeys("1234567890");

            // Check the agreement checkbox
            WebElement agreementCheckbox = driver.findElement(By.id("agreement"));
            if (!agreementCheckbox.isSelected()) {
                agreementCheckbox.click();
            }

            // Submit the form
            driver.findElement(By.xpath("//button[@type='submit']")).click();

            // Wait for the success message and verify
            WebDriverWait waitForSuccess = new WebDriverWait(driver, Duration.ofSeconds(20));
            WebElement successMessage = waitForSuccess.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".thankyou-message h4")));

            if (successMessage.getText().contains("Thanks For Choosing Us!")) {
                System.out.println("Registration successful! Success message displayed: " + successMessage.getText());
            } else {
                System.out.println("Success message not found.");
            }

            // Check email for verification link
            checkEmailForVerification(driver, email);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Method for logging in
    private static void login(WebDriver driver) {
        try {
            driver.get("https://qas.sunhub.com/login");

            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(50));

            // Wait for and enter email
            WebElement emailField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("email")));
            emailField.sendKeys("sufian987456@gmail.com");

            // Wait for and enter password
            WebElement passwordField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("password")));
            passwordField.sendKeys("Sufian@123");

            // Wait for and click the login button
            WebElement loginButton = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button[type='submit']")));
            loginButton.click();

            // Optional: Verify successful login or other actions after login
            System.out.println("Login button clicked successfully!");

        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        }
    }

    // Method to check Mailinator inbox for email verification
    private static void checkEmailForVerification(WebDriver driver, String email) {
        try {
            String mailinatorInboxUrl = "https://www.mailinator.com/v4/public/inboxes.jsp?to=" + email.split("@")[0];
            driver.get(mailinatorInboxUrl);

            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(20));

            // Wait until the first email (with the text 'QAS Sunhub') is clickable
            WebElement qasSunhubEmail = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//tr[td[contains(text(), 'QA Sunhub')]]//td[@onclick]")));
            System.out.println("Clicked on the 'QAS Sunhub' email.");
            qasSunhubEmail.click();

            // Wait for the "Verify Email Address" link to be clickable and click it
            WebElement verifyEmailLink = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//*[@id=\"pills-links-tab\"]")));
            verifyEmailLink.click();

            WebElement verifyEmailLink1 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[contains(@href, '/v1/client/email/verify/')]")));
            verifyEmailLink1.click();
            System.out.println("Account Created and Verified Successfully...");

        } catch (Exception e) {
            System.out.println("Error while checking email: " + e.getMessage());
        }
    }

    // Method to generate a unique email address
    private static String generateUniqueEmail() {
        long timestamp = System.currentTimeMillis();
        return "automation." + timestamp + "@mailinator.com";
    }

    // Method to generate a unique password
    private static String generateUniquePassword() {
        String passwordChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()";
        Random random = new Random();
        StringBuilder password = new StringBuilder(12);

        for (int i = 0; i < 12; i++) {
            password.append(passwordChars.charAt(random.nextInt(passwordChars.length())));
        }

        return password.toString();
    }

    // Method to save credentials (email and password) to a text file
    private static void saveCredentialsToFile(String email, String password) {
        try {
            File file = new File("credentials.txt");

            if (!file.exists()) {
                file.createNewFile();
            }

            try (BufferedWriter writer = new BufferedWriter(new FileWriter(file, false))) {
                writer.write("Email: " + email);
                writer.newLine();
                writer.write("Password: " + password);
                writer.newLine();
                writer.newLine();
            }

            System.out.println("Credentials saved to credentials.txt");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}